=====================================
GLOBAL VARIABLE/BIND VARIABLES:-

CREATE OR REPLACE PROCEDURE FORMATPHONE(PPHONE IN OUT VARCHAR2)
  2  AS
  3     BEGIN
  4             PPHONE:='('||SUBSTR(PPHONE,1,3)||')'||SUBSTR(PPHONE,4,3)||'-'||SUBSTR(PPHONE,7);
  5  END;
  6   /

Procedure created.

SQL> VARIABLE GPHONE VARCHAR2(25);
SQL> DECLARE
  2  BEGIN
  3     :GPHONE :='07922818667';
  4  END;
  5  /

PL/SQL procedure successfully completed.

SQL> EXEC FORMATPHONE(:GPHONE);

PL/SQL procedure successfully completed.

SQL> PRINT :GPHONE;

GPHONE
--------------------------------
(079)228-18667

===========================================


TRY WITH ONLY ONE CURSOR


DEPARTMENT WISE:-

CREATE OR REPLACE PROCEDURE PQR AS
    CURSOR C_GEN IS SELECT * FROM DEPT;
    CURSOR C_DEPT (D_NO1 NUMBER) IS SELECT * FROM EMP WHERE DEPTNO=D_NO1;
    INFO1 C_GEN%ROWTYPE;
    INFO2 C_DEPT%ROWTYPE;
    BEGIN
    OPEN C_GEN;  
	LOOP    
        FETCH C_GEN INTO INFO1;
        EXIT WHEN C_GEN%NOTFOUND;   

	OPEN C_DEPT(INFO1.DEPTNO);
               LOOP
                       FETCH C_DEPT INTO INFO2;
              		EXIT WHEN C_DEPT%NOTFOUND;
   			DBMS_OUTPUT.PUT_LINE (INFO1.DEPTNO||' '||INFO2.EMPNO||' '||INFO2.ENAME);
                      
		END LOOP;
   
        CLOSE C_DEPT;
  
	END LOOP;
  
    CLOSE C_GEN;  
   END;
    /

==========================================================


DECLARE 

INVALID_AGE EXCEPTION;
VID INT;

BEGIN
VID :=&UID;
IF (VID<18) THEN
RAISE INVALID_AGE;
ELSE 
DBMS_OUTPUT.PUT_LINE('AGE ENTERED IS ='||VID);
END IF;

EXCEPTION WHEN INVALID_AGE THEN
DBMS_OUTPUT.PUT_LINE('AGE SHLD BE GREATER THEN 18');
END;
/

=====================================================================

SELECT EXTRACT( YEAR FROM (SELECT MAX(HIREDATE) FROM EMP)) FROM DUAL);
 ==================


FUNCTION FNNAME (ARG IN DATATYPE) RETURN NUMBER
=====================================
IN PROCEDURE ONLY PROCEDURE PROCEDURENAME AND ARG
BUT IN FN FNNAME (ARG IN DATATYPE) RETURN NUMBER

================================

ASSIGNMENT DAY 4-5:-
CREATE OR REPLACE PROCEDURE ADD_EMPLOYEE(JOB VARCHAR2,MID NUMBER,HDATE DATE,SALARY NUMBER,DID NUMBER)
AS
EID INT;
M INT;
CNT INT;
COUNTING INT;
	BEGIN
		SELECT MAX(EMPNO) INTO M FROM EMP;
		EID:=M+1;
		INSERT INTO EMP(EMPNO) VALUES(EID);
		IF JOB IN ('PROGRAMMER','ACCOUNTANT','PUBLIC_ACCOUNTANT') THEN
			INSERT INTO EMP(JOB) VALUES(JOB);
		END IF;
		SELECT COUNT(EMPNO) INTO COUNTING FROM EMP WHERE EMPNO=MID;
		IF COUNTING>=1 THEN
			INSERT INTO EMP(MGR) VALUES(MID);
		ELSE
			DBMS_OUTPUT.PUT_LINE('EMPLOYEE DOESNT EXIST');
		END IF;
		IF TO_CHAR(HDATE,'DD-MM-YYYY')<SYSDATE THEN
			INSERT INTO EMP(HIREDATE) VALUES(HDATE);
		END IF;
		IF SALARY>800 THEN
			INSERT INTO EMP(SAL) VALUES(SALARY);
		END IF;
		SELECT COUNT(DEPTNO) INTO CNT FROM DEPT WHERE DEPTNO=DID;
		IF CNT>=1 THEN
			INSERT INTO EMP(EMP.DEPTNO) VALUES(DID);
		END IF;
	END;

DECLARE
    BEGIN
        ADD_EMPLOYEE('PROGRAMMER',7788,TO_DATE('04-04-2017','DD-MM-YYYY'),1200,10);
    END;
    /
	

===============================================================







